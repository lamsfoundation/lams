<?xml version="1.0" encoding="UTF-8"?>

<project name="tools_base" basedir="." default="print-usage">
	<description>
		This is a base for all LAMS Tool build.xml files.
		It contains all tasks required to build a Tool.
		Some Tools can have their own private targets.
	</description>
	
	<!-- Directory of this parent file -->
	<dirname property="toolsbase.dir" file="${ant.file.tools_base}"/>
	
	<!-- Import another base file -->
	<import file="${toolsbase.dir}/build_base.xml"/> 
	
	<path id="deploy.classpath">
		<fileset dir="../lams_build/deploy-tool/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<!-- ================================================================ -->
	<!-- Print information								                  -->
	<!-- ================================================================ -->
		
	<target name="print-usage" depends="build_base.print-usage"
	        description="Displays Ant targets descriptions">
		<echo>
		build-db                --> Creates database tables and entries
		deploy-tool             --> Deploys all Tool content
		</echo>	
	</target>
	
	<!-- =================================================================== -->
	<!-- Database Tasks                                             		 -->
	<!-- =================================================================== -->
	
	<target name="build-db" description="Deletes and creates Tool tables and inserts default content.">
		<echo>${ant.project.name}: Creating Tool database tables</echo>
		<antcall target="_db-script">
		    <param name="sql.script" value="${db.scripts}/${tool.build.sql.create}"/>
		</antcall>
	</target>

	<!-- =================================================================== -->
	<!-- Product deployment			                                         -->
	<!-- =================================================================== -->
	
	<target name="copy-to-lams-lib" depends="_target-not-available"
			    description="Copies JAR file to lams_build/lib/lams for other projects to use.">
		<echo>Tools JARs need not be copied to lams_build</echo>
	</target>
	

	<target name="deploy-tool" depends="_package-create, _package-run" 
	   description="Build Tool archives and run deployment. Do not run on a production environment." />
	
	
	<target name="_package-create" depends="_build-jar, _build-war">
		<!-- Internal target: Generates Tool deployment package. -->
		<echo>${ant.project.name}: Creating deployment package</echo>

		<echo>${ant.project.name}: Copying additional libraries and scripts for deployment</echo>
		<copy todir="${basedir}/build/deploy" overwrite="true" verbose="true">
			<fileset dir="../lams_build/deploy-tool">
				<include name="**" />
			</fileset>
		</copy>
		
		<echo>${ant.project.name}: Copying Tool SQL files</echo>
		<copy overwrite="true" todir="${basedir}/build/deploy/sql" verbose="true">
			<fileset dir="${db.scripts}/">
				<include name="${tool.build.sql.create}" />
				<include name="activity_insert.sql" />
				<include name="library_insert.sql" />
			</fileset>
		</copy>
		
		<copy todir="${basedir}/build/deploy/sql" overwrite="true" verbose="true">
			<fileset dir="${db.scripts}/">
				<include name="tool_insert.sql" />
			</fileset>	
			<filterset>
				<filter token="tool_version" value="${tool.version}" />
			</filterset>
		</copy>
		
		<copy todir="${basedir}/build/deploy/sql" overwrite="true" verbose="true">
			<fileset dir="${db.scripts}/">
				<include name="db_version_insert.sql" />
			</fileset>	
			<filterset>
				<filter token="tool_version" value="${tool.version}" />
				<filter token="signature" value="${signature}" />
			</filterset>
		</copy>
		
		<echo>${ant.project.name}: Copying Tool language files</echo>
		<copy todir="${basedir}/build/deploy/language" overwrite="true">
			<fileset dir="${conf.dir}/language/lams">
				<include name="*.properties" />
				<include name="*.txt" />
			</fileset>
		</copy>
		
		<echo>${ant.project.name}: Copying Tool JAR and WAR</echo>
		<copy todir="${basedir}/build/deploy" overwrite="true" verbose="true">
			<fileset dir="${basedir}/build/lib">
				<include name="*.jar"/>
				<include name="*.war"/>
			</fileset>
		</copy>

		<taskdef name="generateDeployProperties"
		         classname="org.lamsfoundation.lams.tool.deploy.CreateToolPackageTask"
			     classpathref="deploy.classpath" />

		<echo>${ant.project.name}: Preparing Deployment Properties file</echo>
		<generateDeployProperties depends="compile"
			mode="development" 
			outputPath="${basedir}/build/deploy" 
			generateForInstallers="${generate.for.installers}"
			dbPassword="${db.password}" 
			dbUsername="${db.username}" 
			dbDriverUrl="${db.url.build}" 
			dbDriverClass="com.mysql.jdbc.Driver" 
			deployFiles="${basedir}/build/deploy/${product}.war,${basedir}/build/deploy/${product}.jar" 
			toolJarFileName="${product}.jar"
			toolSignature="${signature}"
			toolVersion="${tool.version}"
			hideTool="${tool.hide}"
			minServerVersionNumber="${min.server.version.number}"
			toolTablesScriptPath="${basedir}/build/deploy/sql/${tool.build.sql.create}" 
			toolActivityInsertScriptPath="${basedir}/build/deploy/sql/activity_insert.sql" 
			toolLibraryInsertScriptPath="${basedir}/build/deploy/sql/library_insert.sql" 
			toolInsertScriptPath="${basedir}/build/deploy/sql/tool_insert.sql" 
			toolDBVersionScriptPath="${basedir}/build/deploy/sql/db_version_insert.sql"
			toolApplicationContextPath="/${product.path.filesystem}/${tool.application.context.file}"
			lamsEarPath="${server.home}/standalone/deployments/lams.ear"
			toolContext="${toolContext}" 
			toolWebUri="${product}.war"
			languageFilesPackage="${product.path.java}">
			
			<!-- Language files go as a fileset.
			     Not nice but can't work out how to embed them in a tag. -->
			<fileset dir="${basedir}/build/deploy/language">
				<include name="**/*.properties" />
				<include name="**/*.txt" />
			</fileset>

		</generateDeployProperties>
	</target>

	
	<target name="_package-run">
		<!-- Internal target: Deploys Tool package. -->
		<echo>Deploying ${ant.project.name} package</echo>
		<java classname="org.lamsfoundation.lams.tool.deploy.Deploy" classpathref="deploy.classpath" fork="true">
			<arg file="${basedir}/build/deploy/deploy.xml" />
			<arg value="True" /> <!-- forcedb -->
		</java>
	</target>
</project>