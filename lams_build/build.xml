<?xml version="1.0" encoding="UTF-8"?>

<project name="LAMS Build" basedir="." default="print-usage">

	<!-- Import properties from the shared and o/s specific files -->
	<property file="build.properties"/>
	<property file="common.properties" />
	<property file="${osPropertiesName}.properties" />
	
	<!-- Check if WildFly was slimmed. It can be any file removed in slimming process -->
	<available file="${server.home}/standalone/configuration/standalone-full.xml" property="non-slimmed"/>
	
	<target name="print-usage" description="Displays Ant targets descriptions">
		<echo>
		LAMS main build file
		------------------------------------------------------
		
		Available targets are:
		print-usage               --> Display this information
		copy-tags                 --> Copies custom JSP tags from Central to all other projects
		build-tool-deploy-utility --> Rebuilds Tool deployer and updates copy in lams_build
		build-db                  --> Creates database tables and entries
		deploy-ear                --> Builds and deploys LAMS EAR
		deploy-ear-updater        --> Builds and deploys LAMS EAR for updater
		deploy-tools              --> Standard Tool deployment
		deploy-tools-minimal      --> Deploys only Tools required to run LAMS
		deploy-tools-updater      --> Deploys Tools for updater
		deploy-learning-libraries --> Deploys complex Tools
		lams-cruise               --> Runs full LAMS redeployment
		lams-cruise-min-tools     --> Runs full LAMS redeployment with minimal Tools set
		slim-jboss                --> Removes unused JBoss files
		slim-jboss-revert         --> Puts back JBoss files removed in slimming process
			
		If you want to run full deployment, execute lams-cruise.
		</echo>
	</target>

	
	<target name="_clean-dirs">
		<!-- Internal target: Recreates dirs for compiled output files. -->
		<echo>${ant.project.name}: Removing cache and build folders</echo>
		<delete dir="${server.home}server/default/tmp" />
		<!-- <delete dir="${server.home}server/default/work" /> -->
		<delete dir="assembly" />
		
		<echo>${ant.project.name}: Creating build dir structure</echo>
		<mkdir dir="assembly" />
	</target>

	
	<target name="_clean-core" depends="_clean-dirs">
		<!-- Internal target: Removes output dirs of Core projects -->
		<ant antfile="../lams_common/build.xml"            target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_contentrepository/build.xml" target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_central/build.xml"           target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_learning/build.xml"          target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_monitoring/build.xml"        target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_admin/build.xml"             target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_www/build.xml"               target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_gradebook/build.xml"         target="_clean-dirs" inheritAll="false" />
	</target>

	
	<target name="_clean-tools">
		<!-- Internal target: Removes output dirs of Tools -->
		<ant antfile="../lams_tool_assessment/build.xml"    target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_bbb/build.xml"           target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_chat/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_daco/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<!--<ant antfile="../lams_tool_doku/build.xml"          target="_clean-dirs" inheritAll="false"/>-->
		<ant antfile="../lams_tool_forum/build.xml"         target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_gmap/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_images/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_imscc/build.xml"         target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_lamc/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_laqa/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_larsrc/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_leader/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_nb/build.xml"          	target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_notebook/build.xml"      target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_pixlr/build.xml"         target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_sbmt/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_scratchie/build.xml"     target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_scribe/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_spreadsheet/build.xml"   target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_survey/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_task/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_vote/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_wiki/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_kaltura/build.xml"       target="_clean-dirs" inheritAll="false"/>
		<!-- 
			<ant antfile="../lams_tool_eadventure/build.xml"    target="_clean-dirs" inheritAll="false"/>
			<ant antfile="../lams_tool_videorecorder/build.xml" target="_clean-dirs" inheritAll="false"/>
			<ant antfile="../lams_tool_wookie/build.xml"    	target="_clean-dirs" inheritAll="false"/>
		-->
	</target>
	
	
	<target name="clean-all" depends="_clean-core, _clean-tools" 
		    description="Removes output dirs of Core projects and Tools (used for CruiseControl instance)" />

	
	<target name="copy-tags" description="Copies lams.tld and LAMS Tags from lams-central to other projects.">
		<ant antfile="../lams_admin/build.xml"              target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_learning/build.xml"           target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_monitoring/build.xml"         target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_gradebook/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_www/build.xml"                target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_assessment/build.xml"    target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_bbb/build.xml"           target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_chat/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_daco/build.xml"          target="copy-tags" inheritAll="false"/>
		<!--<ant antfile="../lams_tool_doku/build.xml"          target="copy-tags" inheritAll="false"/>-->
		<ant antfile="../lams_tool_forum/build.xml"         target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_gmap/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_images/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_imscc/build.xml"         target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_lamc/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_laqa/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_larsrc/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_leader/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_nb/build.xml"          	target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_mindmap/build.xml"       target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_notebook/build.xml"      target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_pixlr/build.xml"         target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_sbmt/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_scratchie/build.xml"     target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_scribe/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_spreadsheet/build.xml"   target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_survey/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_task/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_vote/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_wiki/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_kaltura/build.xml"       target="copy-tags" inheritAll="false"/>
		<!-- 
			<ant antfile="../lams_tool_eadventure/build.xml"    target="copy-tags" inheritAll="false"/>
			<ant antfile="../lams_tool_videorecorder/build.xml" target="copy-tags" inheritAll="false"/>
			<ant antfile="../lams_tool_wookie/build.xml"    	target="copy-tags" inheritAll="false"/>
		-->
		<echo>MANUALLY COPY TAGS TO UNLISTED PROJECTS:
			  Kaltura and other public and private tools</echo>
	</target>

	
	<target name="build-db" description="Rebuilds LAMS Database.">
		<echo>Copying embedded MySQL drivers to library dir, if available</echo>
		<copy todir="../lams_build/lib/mysql" overwrite="false" verbose="true">
			<fileset dir="../mysql_embedded/connectors" erroronmissingdir="false">
				<include name="*-driver.jar" />
				<include name="*-db-files-${osPropertiesName}.jar" />
			</fileset>
		</copy>
		
		<ant antfile="../lams_common/build.xml" target="build-db" inheritAll="false" />
	</target>
	
			
	<target name="_build-core">
		<!-- Internal target: Builds LAMS core projects -->
		<echo>Building LAMS core projects</echo>
		<ant antfile="../lams_common/build.xml"            target="_build-jar"     inheritAll="false" />
		<ant antfile="../lams_contentrepository/build.xml" target="_build-jar"     inheritAll="false" />
		<ant antfile="../lams_central/build.xml"           target="_build-product" inheritAll="false" />
		<ant antfile="../lams_learning/build.xml"          target="_build-product" inheritAll="false" />
		<ant antfile="../lams_monitoring/build.xml"        target="_build-product" inheritAll="false" />
		<ant antfile="../lams_admin/build.xml"             target="_build-product" inheritAll="false" />
		<ant antfile="../lams_www/build.xml"               target="_build-war"     inheritAll="false" />
		<ant antfile="../lams_gradebook/build.xml"         target="_build-product" inheritAll="false" />
	</target>
	
	
	<target name="copy-to-lams-lib"
		    description="Copies LAMS core JARs to lams_build library for other projects to use">
		<echo>Copying LAMS core projects' JARs to lams_build/lib/lams</echo>
		<ant antfile="../lams_common/build.xml"            target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_central/build.xml"           target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_contentrepository/build.xml" target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_learning/build.xml"          target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_monitoring/build.xml"        target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_admin/build.xml"             target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_gradebook/build.xml"         target="copy-to-lams-lib" inheritAll="false" />
	</target>
	
	
	<target name="_build-ear" depends="_clean-dirs, _build-core">
		<!-- Internal target: Assembles LAMS EAR in exploded form -->
		<echo>${ant.project.name}: Copying libraries</echo>
		<copy todir="assembly/lams.ear" flatten="true">
			<fileset dir="..">
				<include name="lams_monitoring/build/lib/*.war"/>
				<include name="lams_learning/build/lib/*.war"/>
				<include name="lams_admin/build/lib/*.war"/>
				<include name="lams_gradebook/build/lib/*.war"/>
			</fileset>
		</copy>
		<copy todir="assembly/lams.ear/lib" flatten="true">
			<fileset dir="..">
				<include name="lams_common/build/lib/lams.jar" />
				<include name="lams_contentrepository/build/lib/*.jar" />
				<include name="lams_central/build/lib/*.jar" />
				<include name="lams_monitoring/build/lib/*.jar"/>
				<include name="lams_learning/build/lib/*.jar"/>
				<include name="lams_admin/build/lib/*.jar"/>
				<include name="lams_gradebook/build/lib/*.jar"/>
			</fileset>
		</copy>

		<echo>Copying lams-central.war</echo>
		<copy todir="assembly/lams.ear/lams-central.war">
			<fileset dir="../lams_central/build/lib/lams-central.war" />
		</copy>
		
		<echo>Expanding lams-www.war</echo>
		<unjar src="../lams_www/build/lib/lams-www.war" 
			   dest="assembly/lams.ear/lams-www.war"
		/>
		
		<echo>Copying language files</echo>
		<copy todir="assembly/lams.ear/lams-dictionary.jar">
			<fileset dir="../lams_common/build/lib/language" />
			<fileset dir="../lams_central/build/lib/language" />
			<fileset dir="../lams_monitoring/build/lib/language" />
			<fileset dir="../lams_learning/build/lib/language" />
			<fileset dir="../lams_admin/build/lib/language" />
			<fileset dir="../lams_gradebook/build/lib/language" />
		</copy>

		<echo>Copying EAR configuration files</echo>
		<copy todir="assembly/lams.ear/META-INF" overwrite="true" verbose="true">
			<fileset dir="${conf.dir}/j2ee">
				<include name="*.xml" />
				<exclude name="jboss-all.xml" />
			</fileset>
		</copy>
		<copy tofile="assembly/lams.ear/META-INF/MANIFEST.MF" overwrite="true" verbose="true">
			<fileset file="${conf.dir}/j2ee/MANIFEST-template.MF" />
	        <filterset>
	        	<filter token="version" value="${project.version}"/>
	        </filterset>
		</copy>
		<copy todir="assembly/lams.ear/META-INF" overwrite="true" verbose="true">
			<fileset file="${conf.dir}/j2ee/jboss-all.xml" />
	        <filterset>
	        	<filter token="secure.cookie" value="${secure.cookie}"/>
	        </filterset>
		</copy>
		
		<echo>Copying EAR static 3rd party dependencies (not included as modules)</echo>
		<copy todir="assembly/lams.ear/lib" flatten="true">
			<!-- copy autopatcher-->
			<fileset dir="lib/autopatch">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	
	<target name="deploy-ear" depends="_build-ear" description="Deploys EAR.">
		<echo>Deploying EAR</echo>
		<delete dir="${server.home}/standalone/deployments/lams.ear"/>
		<copy todir="${server.home}/standalone/deployments/lams.ear">
			<fileset dir="assembly/lams.ear" />
		</copy>
	</target>
	
	
	<target name="deploy-ear-updater" depends="_build-ear"
		description="Deploys EAR file to the win_installer directory.">
		<echo>Deploying EAR to Windows Installer dir</echo>
		<delete dir="../win_installer/assembly"/>
		<copy todir="../win_installer/assembly/lams.ear">
			<fileset dir="assembly/lams.ear" />
		</copy>
	</target>

	
	<target name="deploy-tools-minimal" description="Deploys minimal set of Tools.">
		<echo>Deploying minimal set of Tools</echo>
  		<ant antfile="../lams_tool_notebook/build.xml" target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_wiki/build.xml" 	 target="deploy-tool" inheritAll="false" />
	</target>
	
	
	<target name="_deploy-tools">
		<echo>Deploying Tools</echo>
		<ant antfile="../lams_tool_assessment/build.xml"    target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_bbb/build.xml"           target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_chat/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_daco/build.xml"          target="deploy-tool" inheritAll="false" />
		<!--<ant antfile="../lams_tool_doku/build.xml"          target="deploy-tool" inheritAll="false" />-->
		<ant antfile="../lams_tool_forum/build.xml"         target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_gmap/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_images/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_imscc/build.xml"         target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_lamc/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_laqa/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_larsrc/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_leader/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_mindmap/build.xml"       target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_nb/build.xml"          	target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_notebook/build.xml"      target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_pixlr/build.xml"         target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_sbmt/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_scratchie/build.xml"     target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_scribe/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_spreadsheet/build.xml"   target="deploy-tool" inheritAll="false" />
  		<ant antfile="../lams_tool_survey/build.xml"        target="deploy-tool" inheritAll="false" />
  		<ant antfile="../lams_tool_task/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_vote/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_wiki/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_kaltura/build.xml"       target="deploy-tool" inheritAll="false" />
		<!-- 
			<ant antfile="../lams_tool_eadventure/build.xml"    target="deploy-tool" inheritAll="false"/>
			<ant antfile="../lams_tool_videorecorder/build.xml" target="deploy-tool" inheritAll="false"/>
			<ant antfile="../lams_tool_wookie/build.xml"    	target="deploy-tool" inheritAll="false"/>
		-->
	</target>
	

	<target name="deploy-tools" depends="_deploy-tools, deploy-learning-libraries" 
		    description="Deploys LAMS Tools and special parallel activities." />

	
	<target name="_deploy-learning-library">
		<!-- Internal target: Deploys a parallel activity. -->
		
		<path id="deploy.classpath">
			<fileset dir="../lams_build/deploy-tool/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="../lams_build/lib">
				<include name="**/*.jar" />
			</fileset>
		</path>
		
		<property name="dictionary.dir" value="" />

		<property name="library.assembly"     value="assembly/${library.name}" />
		<property name="library.basedir"      value="librarypackages/${library.name}" />
		<property name="library.language.src" value="${library.basedir}/language/lams" />
		<property name="library.language.dst" value="${server.home}/standalone/deployments/lams.ear/lams-dictionary.jar/org/lamsfoundation/lams/library/${library.name}" />

		<copy todir="${library.assembly}/sql" overwrite="true" verbose="true">
			<fileset dir="${library.basedir}">
				<include name="*.sql"/>
			</fileset>
		</copy>

		<copy todir="${library.assembly}/language" overwrite="true">
			<fileset dir="${library.language.src}" />
		</copy>

		<echo>Parsing deploy library XML</echo>
		<copy file="${library.basedir}/deployLibrary.xml" tofile="${library.assembly}/deploy.xml" overwrite="true">
		  	<!-- replace @assemblydir@ in the xml template - this allows it to run under any directory structure -->
	        <filterchain>
	            <striplinecomments>
	               <comment value="!"/>
	            </striplinecomments>
	           <replacetokens>
	                <token key="assemblydir" value="${library.assembly}/sql"/>
	            </replacetokens>
	            <replacetokens>
		            <token key="assemblylangdir" value="${library.assembly}/language"/>
		        </replacetokens>
	            <replacetokens>
		             <token key="lamsear" value="${server.home}/standalone/deployments/lams.ear"/>
		        </replacetokens>
	        </filterchain>
	    </copy>

		<echo>Generating properties XML file</echo>
		<taskdef name="generateDeployLibraryProperties" 
			classname="org.lamsfoundation.lams.tool.deploy.libraryActivity.CreateLibraryPackageTask">
		    <classpath refid="deploy.classpath"/>
		</taskdef>
		<generateDeployLibraryProperties depends="compile" 
			mode="development" 
			outputPath="${library.assembly}"
			configFile="${library.assembly}/deploy.xml"
			dbPassword="${db.password}"
			dbUsername="${db.username}"
			dbDriverUrl="${db.url.build}"
			dbDriverClass="com.mysql.jdbc.Driver"	
		/>
	
		<echo>Deploying language files</echo>
		<copy todir="${library.language.dst}" overwrite="true">
			<fileset dir="${library.language.src}" />
		</copy>

		<java
			classname="org.lamsfoundation.lams.tool.deploy.libraryActivity.DeployLibrary"
			classpathref="deploy.classpath"
			fork="true">
				<arg file="${library.assembly}/deploy.xml"/>
				<arg file="${library.assembly}/language"/>
		</java>
	</target>
	
	
	<target name="deploy-learning-libraries"
		    description="Builds and deploys parallel and other complex activities. Can be done only after Tools are deployed">
		<echo>${ant.project.name}: Deploying Library Activities</echo>

		<echo>Generating deployment package for share resources / forum parallel activity</echo>
		<antcall target="_deploy-learning-library">
			<param name="library.name" value="shareresourcesforum"/>
		</antcall> 
 
		<echo>Generating deployment package for chat / scribe parallel activity</echo>
		<antcall target="_deploy-learning-library">
			<param name="library.name" value="chatscribe"/>
		</antcall> 

		<echo>Generating deployment package for forum / scribe parallel activity</echo>
		<antcall target="_deploy-learning-library">
			<param name="library.name" value="forumscribe"/>
		 </antcall> 
	</target>


	<target name="_deploy-resources">
		<!-- Internal target: Deploys third party JARs and cofiguration files -->
		<echo>${ant.project.name}: Deploying libraries as WildFly modules</echo>
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/poi/main" overwrite="true" verbose="true">
			<fileset dir="lib/apache-poi">
				<include name="poi-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/poi/main/module.xml"
			  file="lib/apache-poi/poi.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/xmlbeans/main" overwrite="true" verbose="true">
			<fileset dir="lib/apache-poi">
				<include name="xmlbeans-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/xmlbeans/main/module.xml"
			  file="lib/apache-poi/xmlbeans.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/imsglobal/main" overwrite="true" verbose="true">
			<fileset dir="lib/basiclti-util">
				<include name="basiclti-util-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/imsglobal/main/module.xml"
			  file="lib/basiclti-util/basiclti-util.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/net/oauth/core/main" overwrite="true" verbose="true">
			<fileset dir="lib/basiclti-util">
				<include name="oauth-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/net/oauth/core/main/module.xml"
			  file="lib/basiclti-util/oauth.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/oauth/signpost/main" overwrite="true" verbose="true">
			<fileset dir="lib/basiclti-util">
				<include name="signpost-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/oauth/signpost/main/module.xml"
			  file="lib/basiclti-util/signpost.module.xml" overwrite="true" verbose="true" />		



		<copy todir="${server.home}/modules/system/layers/base/net/fckeditor/main" overwrite="true" verbose="true">
			<fileset dir="lib/fckeditor">
				<include name="fckeditor-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/net/fckeditor/main/module.xml"
			  file="lib/fckeditor/fckeditor.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/commons/digester/main" overwrite="true" verbose="true">
			<fileset dir="lib/jakarta-commons">
				<include name="commons-digester-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/commons/digester/main/module.xml"
			  file="lib/jakarta-commons/digester.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/commons/discovery/main" overwrite="true" verbose="true">
			<fileset dir="lib/jakarta-commons">
				<include name="commons-discovery-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/commons/discovery/main/module.xml"
			  file="lib/jakarta-commons/discovery.module.xml" overwrite="true" verbose="true" />
			
		<copy todir="${server.home}/modules/system/layers/base/org/apache/commons/fileupload/main" overwrite="true" verbose="true">
			<fileset dir="lib/jakarta-commons">
				<include name="commons-fileupload.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/commons/fileupload/main/module.xml"
			  file="lib/jakarta-commons/fileupload.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/commons/validator/main" overwrite="true" verbose="true">
			<fileset dir="lib/jakarta-commons">
				<include name="commons-validator.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/commons/validator/main/module.xml"
			  file="lib/jakarta-commons/validator.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/jboss/jbossweb/main" overwrite="true" verbose="true">
			<fileset dir="lib/jboss">
				<include name="jbossweb.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/jboss/jbossweb/main/module.xml"
			  file="lib/jboss/jbossweb.module.xml" overwrite="true" verbose="true" />
		
		
		
		<!-- WildFly does not load all classes from JDK that LAMS needs (com/sun/org/apache/xerces/internal)
		     We need our own, extended list -->
		<copy tofile="${server.home}/modules/system/layers/base/sun/jdk/main/module.xml"
			  file="lib/jdk/jdk.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/scilab/forge/jlatexmath/main" overwrite="true" verbose="true">
			<fileset dir="lib/jlatexmath">
				<include name="jlatexmath-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/scilab/forge/jlatexmath/main/module.xml"
			  file="lib/jlatexmath/jlatexmath.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/com/google/gson/main" overwrite="true" verbose="true">
			<fileset dir="lib/json">
				<include name="gson-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/google/gson/main/module.xml"
			  file="lib/json/gson.module.xml" overwrite="true" verbose="true" />

		<copy todir="${server.home}/modules/system/layers/base/org/json/simple/main" overwrite="true" verbose="true">
			<fileset dir="lib/json">
				<include name="json-simple-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/json/simple/main/module.xml"
			  file="lib/json/json-simple.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/io/jsonwebtoken/main" overwrite="true" verbose="true">
			<fileset dir="lib/json">
				<include name="jjwt-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/io/jsonwebtoken/main/module.xml"
			  file="lib/json/jjwt.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/lucene/4.10" overwrite="true" verbose="true">
			<fileset dir="lib/lucene">
				<include name="lucene-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/lucene/4.10/module.xml"
			  file="lib/lucene/lucene.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/com/mysql/main" overwrite="true" verbose="true">
			<fileset dir="lib/mysql">
				<include name="mysql-connector-java-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/mysql/main/module.xml"
			  file="lib/mysql/mysql-connector-java.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/quartz/main" overwrite="true" verbose="true">
			<fileset dir="lib/quartz">
				<include name="quartz-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/quartz/main/module.xml"
			  file="lib/quartz/quartz.module.xml" overwrite="true" verbose="true" />

		
		
		<copy todir="${server.home}/modules/system/layers/base/org/springframework/main" overwrite="true" verbose="true">
			<fileset dir="lib/spring">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/springframework/main/module.xml"
			  file="lib/spring/spring.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/oro/main" overwrite="true" verbose="true">
			<fileset dir="lib/struts">
				<include name="jakarta-oro.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/oro/main/module.xml"
			  file="lib/struts/jakarta-oro.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/struts/main" overwrite="true" verbose="true">
			<fileset dir="lib/struts">
				<include name="struts.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/struts/main/module.xml"
			  file="lib/struts/struts.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/strutsel/main" overwrite="true" verbose="true">
			<fileset dir="lib/struts">
				<include name="struts-el.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/strutsel/main/module.xml"
			  file="lib/struts/struts-el.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/tuckey/urlrewritefilter/main" overwrite="true" verbose="true">
			<fileset dir="lib/urlrewritefilter">
				<include name="urlrewritefilter-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/tuckey/urlrewritefilter/main/module.xml"
			  file="lib/urlrewritefilter/urlrewritefilter.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/com/warrenstrange/googleauth/main" overwrite="true" verbose="true">
			<fileset dir="lib/googleauth">
				<include name="googleauth-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/warrenstrange/googleauth/main/module.xml"
			  file="lib/googleauth/googleauth.module.xml" overwrite="true" verbose="true" />		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/xmlcommons/main" overwrite="true" verbose="true">
			<fileset dir="lib/xml-commons">
				<include name="xml-apis*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/xmlcommons/main/module.xml"
			  file="lib/xml-commons/xmlcommons.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/xmlpull/main" overwrite="true" verbose="true">
			<fileset dir="lib/xstream">
				<include name="xmlpull-*.jar" />
				<include name="xpp*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/xmlpull/main/module.xml"
			  file="lib/xstream/xmlpull.module.xml" overwrite="true" verbose="true" />
				
		
		
		<copy todir="${server.home}/modules/system/layers/base/com/thoughtworks/xstream/main" overwrite="true" verbose="true">
			<fileset dir="lib/xstream">
				<include name="xstream-*.jar" />
			</fileset>
		</copy>
		
		<copy tofile="${server.home}/modules/system/layers/base/com/thoughtworks/xstream/main/module.xml"
			  file="lib/xstream/xstream.module.xml" overwrite="true" verbose="true" />
		

		<echo>${ant.project.name}: Deploying configuration files</echo>
		<antcall target="_deploy-standalone-config" />
		<antcall target="_deploy-standalone-config-slimmed" />
		
		<!-- Backup and DELETE org/wildfly/clustering/web/undertow module. This module is used by default
		 (no reconfiguration possible) by Wildfly shared-session (LAMS SSO) to store web sessions as
		 DistributableSessions with Infinispan cache. When this module is not present - InMemorySessionManager
		 is used instead. DistributableSessions for shared-session are buggy under wildfly 8.2.0, we don't
		 use them till migration to Wildfly 9.x
		 It will be placed back if deploy-cluster is run. -->
		<copy todir="${server.home}/backup/undertow"
			  overwrite="false" verbose="true">
			<fileset dir="${server.home}/modules/system/layers/base/org/wildfly/clustering/web/undertow" />
		</copy>
		
		<delete>
			<fileset dir="${server.home}/modules/system/layers/base/org/wildfly/clustering/web/undertow" />
		</delete>
		
		<!-- Mark EAR for WildFly deployment -->
		<delete >
			<fileset dir="${server.home}/standalone/deployments" includes="lams.ear.*"/>
		</delete>
		<touch file="${server.home}/standalone/deployments/lams.ear.dodeploy" />
		
		<echo>${ant.project.name}: Deploying root context content</echo>
		<delete dir="${server.home}welcome-content" />
		<mkdir dir="${server.home}/welcome-content" />
		<copy todir="${server.home}/welcome-content" verbose="true">
			<fileset dir="conf/welcome-content" />
		</copy>
	</target>
	
	
	<target name="_deploy-standalone-config" if="non-slimmed">
		<copy todir="${server.home}/standalone/configuration" overwrite="true" verbose="true">
			<fileset file="${conf.dir}/standalone.xml" />
	        <filterset>
	        	<filter token="db.url.run" value="${db.url.run}"/>
	        	<filter token="db.location" value="${db.location}"/>
                <filter token="db.username" value="${db.username}"/>
                <filter token="db.password" value="${db.password}"/>
	        </filterset>
		</copy>
	</target>
	
	
	<target name="_deploy-standalone-config-slimmed" unless="non-slimmed">
		<copy todir="${server.home}/standalone/configuration" overwrite="true" verbose="true">
			<fileset file="${conf.dir}/slim/standalone.xml" />
	        <filterset>
	        	<filter token="db.url.run" value="${db.url.run}"/>
	        	<filter token="db.location" value="${db.location}"/>
                <filter token="db.username" value="${db.username}"/>
                <filter token="db.password" value="${db.password}"/>
	        </filterset>
		</copy>
	</target>
	
	
	<target name="explode-all" description="Explode WARs of all standard modules.">
		<ant antfile="../lams_learning/build.xml"           target="explode-war" inheritAll="false" />
		<ant antfile="../lams_monitoring/build.xml"         target="explode-war" inheritAll="false" />
		<ant antfile="../lams_admin/build.xml"              target="explode-war" inheritAll="false" />
		<ant antfile="../lams_gradebook/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_assessment/build.xml"    target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_bbb/build.xml"           target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_chat/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_daco/build.xml"          target="explode-war" inheritAll="false" />
		<!--<ant antfile="../lams_tool_doku/build.xml"          target="explode-war" inheritAll="false" />-->
		<ant antfile="../lams_tool_forum/build.xml"         target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_gmap/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_images/build.xml"        target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_imscc/build.xml"         target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_lamc/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_laqa/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_larsrc/build.xml"        target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_leader/build.xml"        target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_mindmap/build.xml"       target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_nb/build.xml"          	target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_notebook/build.xml"      target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_pixlr/build.xml"         target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_sbmt/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_scratchie/build.xml"     target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_scribe/build.xml"        target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_spreadsheet/build.xml"   target="explode-war" inheritAll="false" />
  		<ant antfile="../lams_tool_survey/build.xml"        target="explode-war" inheritAll="false" />
  		<ant antfile="../lams_tool_task/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_vote/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_wiki/build.xml"          target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_kaltura/build.xml"       target="explode-war" inheritAll="false" />
		<ant antfile="../lams_tool_mindmap/build.xml"       target="explode-war" inheritAll="false" />
		<!-- 
			<ant antfile="../lams_tool_eadventure/build.xml"    target="explode-war" inheritAll="false"/>
			<ant antfile="../lams_tool_videorecorder/build.xml" target="explode-war" inheritAll="false"/>
			<ant antfile="../lams_tool_wookie/build.xml"    	target="explode-war" inheritAll="false"/>
		-->
	</target>
	
	
	<!-- cruise control task : build lams -->
	<target name="lams-cruise" depends="_build-ear, build-db, deploy-ear, _deploy-resources, deploy-tools"
		    description="Builds entire LAMS (used for CruiseControl instance)" />
	
	
	<!-- cruise control task : build lams without tools -->
	<target name="lams-cruise-min-tools" depends="_build-ear, build-db, deploy-ear, _deploy-resources, deploy-tools-minimal"
	        description="Builds entire LAMS without tools (used for CruiseControl instance)" />
	
	<!-- cruise control task : build lams -->
	<target name="deploy-cluster" description="Prepare cluster environment">
		<echo>${ant.project.name}: Restoring clustering library</echo>
		<copy todir="${server.home}/modules/system/layers/base/org/wildfly/clustering/web/undertow"
			  overwrite="false" verbose="true">
			<fileset dir="${server.home}/backup/undertow" />
		</copy>
		
		<echo>${ant.project.name}: Copying configuration files</echo>
		<copy todir="${server.home}/domain/configuration" overwrite="true" verbose="true">
			<fileset dir="${conf.dir}">
				<include name="domain.xml" />
				<include name="host.xml" />
			</fileset>
	        <filterset>
	        	<filter token="db.url.run" value="${db.url.run}"/>
	        	<filter token="db.location" value="${db.location}"/>
                <filter token="db.username" value="${db.username}"/>
                <filter token="db.password" value="${db.password}"/>
	        </filterset>
		</copy>
		
		<property name="webappTag" value="&lt;/web-app&gt;" />
		<property name="distributableTag" value="&lt;distributable/&gt;" />
		<echo>${ant.project.name}: Making Central sessions distributable</echo>
		<!-- Remove existing entries first, so it is possible to run target multiple times -->
		<replaceregexp file="${server.home}/standalone/deployments/lams.ear/lams-central.war/WEB-INF/web.xml"
					   flags="gi"
		               match="${distributableTag}" 
			           replace=""
		/>
		<replaceregexp file="${server.home}/standalone/deployments/lams.ear/lams-central.war/WEB-INF/web.xml"
			 		   flags="gi"
			           match="(${webappTag})"
			           replace="${line.separator}    ${distributableTag}${line.separator}${line.separator}\1"
		/>
		
		<echo>${ant.project.name}: Zipping lams.ear into domain/tmp dir</echo>
		<zip destfile="${server.home}/domain/tmp/lams.ear"
			 basedir="${server.home}/standalone/deployments/lams.ear"
			 encoding="UTF8"
		 	 compress="false"
			 update="true"
		/>
	</target>
	

	<target name="slim-wildfly" description="Removes unnecessary files from Wildfly 8.2; do not run twice!">
		<delete includeemptydirs="true" verbose="true" failonerror="false">
			<!-- Domain version of server. Standalone is used. -->
			<fileset dir="${server.home}/domain/" />
			<!-- Client -->
			<fileset dir="${server.home}/appclient/" />
			<!-- Binaries -->
			<fileset dir="${server.home}/bin/">
				<include name="client/"/>
				<include name="init.d/"/>
				<include name="service/"/>
				<include name=".jbossclirc"/>
				<include name="add*"/>
				<include name="appclient*"/>
				<include name="jconsole*"/>
				<include name="jdr*"/>
				<include name="domain*"/>
				<include name="jboss-cli*"/>
				<include name="run*"/>
				<include name="vault*"/>
				<include name="ws*"/>
			</fileset>
			<!-- Config files -->
			<fileset dir="${server.home}/standalone/configuration/">
				<include name="standalone-*"/>
			</fileset>
			<!-- Libraries -->
			<fileset dir="${server.home}/modules/system/layers/base/">
				<include name="com/h2database/"/>
				<include name="gnu/"/>
				<include name="org/apache/avro/"/>
				<include name="org/apache/lucene/main/"/>
				<include name="org/apache/openjpa/"/>
				<include name="org/codehaus/jackson/"/>
				<include name="org/codehaus/jettison/"/>
				<include name="org/eclipse/"/>
				<include name="org/hibernate/3/"/>
				<include name="org/hibernate/4.1/"/>
				<include name="org/hibernate/envers/"/>
				<include name="org/hibernate/hql/"/>
				<include name="org/hibernate/search/"/>
				<include name="org/infinispan/lucene/"/>
				<include name="org/infinispan/query/main/"/>
				<include name="org/jberet/"/>
				<include name="org/jboss/as/aggregate/"/>
				<include name="org/jboss/as/appclient/"/>
				<include name="org/jboss/as/clustering/ejb3/"/>
				<include name="org/jboss/as/clustering/web/"/>
				<include name="org/jboss/as/cmp/"/>
				<include name="org/jboss/as/domain-add-user/"/>
				<include name="org/jboss/as/jaxr/"/>
				<include name="org/jboss/as/jaxrs/"/>
				<include name="org/jboss/as/jdr/"/>
				<include name="org/jboss/as/jpa/hibernate/"/>
				<include name="org/jboss/as/jsr77/"/>
				<include name="org/jboss/as/mail/"/>
				<include name="org/jboss/as/modcluster/"/>
				<include name="org/jboss/as/pojo/"/>
				<include name="org/jboss/as/sar/"/>
				<include name="org/jboss/as/security-api/"/>
				<include name="org/jboss/as/webservices/"/>
				<include name="org/jboss/as/vault-tool/"/>
				<include name="org/jboss/as/version/main/jboss-as-version-8.1.0.Final.jar/"/>
				<include name="org/jboss/as/xts/"/>
				<include name="org/jboss/genericjms/"/>
				<include name="org/jboss/integration/"/>
				<include name="org/jboss/mod_cluster/"/>
				<include name="org/jboss/narayana/rts/"/>
				<include name="org/jboss/remoting3/"/>
				<include name="org/jboss/resteasy/jose-jwt/"/>
				<include name="org/jboss/resteasy/resteasy-atom-provider/"/>
				<include name="org/jboss/resteasy/resteasy-crypto/"/>
				<include name="org/jboss/resteasy/resteasy-jackson2-provider/"/>
				<include name="org/jboss/resteasy/resteasy-jackson-provider/"/>
				<include name="org/jboss/resteasy/resteasy-jettison-provider/"/>
				<include name="org/jboss/resteasy/resteasy-jsapi/"/>
				<include name="org/jboss/resteasy/resteasy-json-p-provider/"/>
				<include name="org/jboss/resteasy/resteasy-multipart-provider/"/>
				<include name="org/jboss/resteasy/resteasy-spring/"/>
				<include name="org/jboss/resteasy/resteasy-yaml-provider/"/>
				<include name="org/jboss/shrinkwrap/"/>
				<include name="org/jboss/ws/saaj-impl/"/>
				<include name="org/jboss/ws/tools/"/>
				<include name="org/jboss/xb/"/>
				<include name="org/osgi/"/>
				<include name="org/picketlink/"/>
				<include name="org/wildfly/extension/batch/"/>
				<include name="org/wildfly/extension/mod_cluster/"/>
				<include name="org/wildfly/extension/rts/"/>
				<include name="org/wildfly/jberet/"/>
				<include name="org/wildfly/mod_cluster/"/>
				<include name="org/yaml/"/>
			</fileset>
			<!-- Default content -->
			<fileset dir="${server.home}">
				<include name="welcome-content/" />
			</fileset>
			<!-- Other -->
			<fileset dir="${server.home}/standalone/deployments/">
				<include name="README.txt"/>
			</fileset>
			<fileset dir="${server.home}/docs/" />
			<fileset dir="${server.home}/.installation/" />
		</delete>
	</target>
</project>