<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Application context definition for LAMS. Used to deploy to JBOSS.
-->
<beans>

	<!-- ========================= GENERAL DEFINITIONS ========================= -->

	<import resource="messageContext.xml"/>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

 	<!-- Hibernate SessionFactory. Since LAMS 2.3 it is used in all tools and other parts of LAMS,
 		 rather than several local Session Factiories.
 	-->
	<bean id="coreSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource"><ref bean="dataSource"/></property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:org/lamsfoundation/lams/**/*.hbm.xml</value>
				<value>classpath*:org/eucm/lams/**/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties"><ref bean="hibernateProperties"/></property>
	</bean>
	
	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!-- LAMS primary business object: Hibernate implementation -->
	<bean id="userManagementServiceTarget" class="org.lamsfoundation.lams.usermanagement.service.UserManagementService"
		singleton="false"
	>
		<property name="baseDAO"><ref bean="baseDAO"/></property>
		<property name="groupDAO"><ref bean="groupDAO"/></property>
		<property name="roleDAO"><ref bean="roleDAO"/></property>
		<property name="organisationDAO"><ref bean="organisationDAO"/></property>
		<property name="userOrganisationDAO"><ref bean="userOrganisationDAO"/></property>
		<property name="messageService"><ref bean="commonMessageService"/></property>
	</bean>	
	
	<!-- Transactional proxy for the user management primary business object -->
	<bean id="userManagementService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property>
		<property name="target"><ref local="userManagementServiceTarget"/></property>
		<property name="proxyTargetClass"><value>true</value></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property> 
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="disable*">PROPAGATION_REQUIRED</prop>
				<prop key="set*">PROPAGATION_REQUIRED</prop>
				<prop key="userHasData">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="learningDesignServiceTarget" class="org.lamsfoundation.lams.learningdesign.service.LearningDesignService">
		<property name="messageService"><ref bean="commonMessageService"/></property>
		<property name="learningDesignDAO"><ref bean="learningDesignDAO"/></property>
		<property name="activityDAO"><ref bean="activityDAO"/></property>
		<property name="groupingDAO"><ref bean="groupingDAO"/></property>
		<property name="learningLibraryDAO"><ref bean="learningLibraryDAO"/></property>
		<property name="toolActMessageService"><ref bean="loadedMessageSourceService"/></property>
	</bean>
	
	<bean id="learningDesignService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property>
		<property name="target"><ref local="learningDesignServiceTarget"/></property>
		<property name="proxyTargetClass"><value>true</value></property> 
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="validateLearningDesign">PROPAGATION_REQUIRED</prop>
				<prop key="setValid">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="themeServiceTarget" class="org.lamsfoundation.lams.themes.service.ThemeService">
		<property name="themeDAO"><ref local="themeDAO"/></property>
		<property name="userManagementService"><ref local="userManagementService"/></property>
		<property name="messageService"><ref bean="commonMessageService"/></property>
	</bean>
	
	<bean id="themeService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name ="transactionManager"><ref bean ="transactionManager"/></property>
		<property name ="target"><ref bean="themeServiceTarget"/></property>
		<property name="proxyTargetClass"><value>true</value></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
				<prop key="set*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="timezoneServiceTarget" class="org.lamsfoundation.lams.timezone.service.TimezoneService">
		<property name="timezoneDAO"><ref local="timezoneDAO"/></property>
	</bean>
	
	<bean id="timezoneService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name ="transactionManager"><ref bean ="transactionManager"/></property>
		<property name ="target"><ref bean="timezoneServiceTarget"/></property>
		<property name="proxyTargetClass"><value>true</value></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="signupServiceTarget" class="org.lamsfoundation.lams.signup.service.SignupService">
		<property name="signupDAO"><ref bean="signupDAO" /></property>
		<property name="userManagementService"><ref bean="userManagementService" /></property>
		<property name="lessonService"><ref bean="lessonService" /></property>
	</bean>

	<bean id="signupService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager" /></property>
		<property name="target"><ref local="signupServiceTarget" /></property>
		<property name="proxyTargetClass"><value>true</value></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="signupUser">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="exportToolContentServiceTarget" class="org.lamsfoundation.lams.learningdesign.service.ExportToolContentService">
		<property name="activityDAO"><ref bean="activityDAO"/></property>
		<property name="toolDAO"><ref bean="toolDAO"/></property>
		<property name="toolImportSupportDAO"><ref bean="toolImportSupportDAO"/></property>
		<property name="toolContentDAO"><ref bean="toolContentDAO"/></property>
		<property name="systemToolDAO"><ref bean="systemToolDAO"/></property>
		<property name="baseDAO"><ref bean="baseDAO"/></property>
		<property name="licenseDAO"><ref bean="licenseDAO"/></property>
		<property name="groupingDAO"><ref bean="groupingDAO"/></property>
		<property name="transitionDAO"><ref bean="transitionDAO"/></property>
		<property name="learningDesignDAO"><ref bean="learningDesignDAO"/></property>
		<property name="learningLibraryDAO"><ref bean="learningLibraryDAO"/></property>
	</bean>
	
	<bean id="exportToolContentService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name ="transactionManager"><ref bean ="transactionManager"/></property>
		<property name ="target"><ref bean="exportToolContentServiceTarget"/></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<!-- TransactionProxyFactoryBean by default just proxies all interfaces implemented by the target object -->
		<!-- AuthoringService is class so needs to be proxied via CGLIB -->
		<!-- Specify "proxyTargetClass" = "true" to generate a CGLIB proxy-->
		<property name="proxyTargetClass"><value>true</value></property>     
		
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="export*">PROPAGATION_REQUIRED,+java.lang.Exception</prop>
				<prop key="import*">PROPAGATION_REQUIRED,+java.lang.Exception</prop>
			</props>
		</property>
	</bean>
	
    <!--  Processes a LAMS 1.0.2 import file. Called by exportToolContentService -->
	<bean id="ld102Importer" class="org.lamsfoundation.lams.learningdesign.service.LD102Importer" singleton="false">
		<property name="learningDesignService"><ref bean="learningDesignService"/></property>
		<property name="messageService"><ref bean="commonMessageService"/></property>
		<property name="baseDAO"><ref bean="baseDAO"/></property>
		<property name="learningLibraryDAO"><ref bean="learningLibraryDAO"/></property>
		<property name="learningDesignDAO"><ref bean="learningDesignDAO"/></property>
		<property name="activityDAO"><ref bean="activityDAO"/></property>
		<property name="toolDAO"><ref bean="toolDAO"/></property>
		<property name="toolImportSupportDAO"><ref bean="toolImportSupportDAO"/></property>
		<property name="toolContentDAO"><ref bean="toolContentDAO"/></property>
		<property name="systemToolDAO"><ref bean="systemToolDAO"/></property>
	</bean>
	
	<!--  Access a message service related to a programatically loaded message file. -->
	<!--  Can be used to arbitrarily access any message file that is on the classpath -->
	<!--  as long as you know the file's name and full path.                          -->
	<bean id="loadedMessageSourceService" class="org.lamsfoundation.lams.util.LoadedMessageSourceService">
    </bean>
    	
    <!--  Each message service created by loadedMessageService is a ResourceBundleMessageSource -->
	<bean id="loadedMessageSource" class="org.springframework.context.support.ResourceBundleMessageSource" singleton="false">
	</bean>
			
	<!--  Core Notebook Service -->
	<bean id="coreNotebookServiceTarget" class="org.lamsfoundation.lams.notebook.service.CoreNotebookService">
		<property name="messageService"><ref bean="commonMessageService"/></property>
		<property name="userManagementService"><ref local="userManagementService"/></property>
		<property name="notebookEntryDAO"><ref bean="notebookEntryDAO" /></property>
		<property name="baseDAO"><ref bean="baseDAO" /></property>
	</bean>

	<!--  Presence Chat Service -->
	<bean id="presenceChatService" class="org.lamsfoundation.lams.presence.service.PresenceChatService">
		<property name="presenceChatDAO"><ref bean="presenceChatDAO" /></property>
	</bean>
	
	<bean id="coreNotebookService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name ="transactionManager"><ref bean ="transactionManager"/></property>
		<property name ="target"><ref bean="coreNotebookServiceTarget"/></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<!-- TransactionProxyFactoryBean by default just proxies all interfaces implemented by the target object -->
		<!-- AuthoringService is class so needs to be proxied via CGLIB -->
		<!-- Specify "proxyTargetClass" = "true" to generate a CGLIB proxy-->
		<property name="proxyTargetClass"><value>true</value></property>     
		
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!--  Rating Service -->

	<bean id="ratingService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">

		<property name ="transactionManager"><ref bean ="transactionManager"/></property>
		<property name ="target">
			<bean class="org.lamsfoundation.lams.rating.service.RatingService">
				<property name="messageService"><ref bean="commonMessageService"/></property>
				<property name="ratingDAO"><ref local="ratingDAO" /></property>
				<property name="ratingCommentDAO"><ref local="ratingCommentDAO" /></property>
				<property name="ratingCriteriaDAO"><ref local="ratingCriteriaDAO" /></property>
				<property name="userManagementService"><ref bean="userManagementService"/></property>
			</bean>
		</property>
		<property name="proxyTargetClass"><value>true</value></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="rateItem">PROPAGATION_REQUIRED</prop>
				<prop key="commentItem">PROPAGATION_REQUIRED</prop>
			</props>
		</property>

	</bean>
	
	<!-- Event notification Service -->

	 <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="applicationContextSchedulerContextKey" value="context.central"/>
    	<property name="quartzProperties">
			<props>
				<prop key="org.quartz.jobStore.class">org.springframework.scheduling.quartz.LocalDataSourceJobStore</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
				<prop key="org.quartz.jobStore.tablePrefix">lams_qtz_</prop>
			</props>
		</property> 
		<property name="dataSource"><ref bean="dataSource"/></property>     
    </bean>


    <bean id="eventNotificationService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name ="transactionManager"><ref bean="transactionManager"/></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<property name ="target">
			<bean class="org.lamsfoundation.lams.events.EventNotificationService">
				<constructor-arg>
         			<ref bean="scheduler"/>
        		</constructor-arg>
				<property name="eventDAO"><ref bean="eventDAO" /></property>
				<property name="userManagementService"><ref bean="userManagementService"/></property>
        		<property name="messageService"><ref bean="commonMessageService"/></property>
        		<property name="lessonService"><ref bean="lessonService"/></property>
        		<property name="toolService"><ref bean="lamsToolService"/></property>
			</bean>	
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="createEvent">PROPAGATION_REQUIRED</prop>
				<prop key="deleteEvent">PROPAGATION_REQUIRED</prop>
				<prop key="sendMessage">PROPAGATION_REQUIRED</prop>
				<prop key="notifyLessonMonitors">PROPAGATION_REQUIRED</prop>
				<prop key="subscribe">PROPAGATION_REQUIRED</prop>
				<prop key="unsubscribe">PROPAGATION_REQUIRED</prop>
				<prop key="trigger*">PROPAGATION_REQUIRED</prop>
				<prop key="saveEvent">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>
	
	<!-- Log Event notification Service -->
	
	<bean id="logEventService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name ="transactionManager"><ref bean ="transactionManager"/></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<property name ="target">
			<bean class="org.lamsfoundation.lams.logevent.service.LogEventService">
				<property name="logEventDAO"><ref local="logEventDAO"/></property>
				<property name="userManagementService"><ref local="userManagementService"/></property>
			</bean>	
		</property>
		<property name="proxyTargetClass"><value>true</value></property> 
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="logEvent">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>	
	
	<!--  Configuration service -->
	<bean id="configurationService" class="org.lamsfoundation.lams.util.Configuration">
		<property name="configurationDAO"><ref bean="configurationDAO" /></property>
		<property name="registrationDAO"><ref bean="registrationDAO" /></property>
		<property name="messageService"><ref bean="commonMessageService" /></property>
		<property name="scheduler"><ref bean="scheduler" /></property>
	</bean>
	
	<!-- auditing service -->
	<bean id="auditService" class="org.lamsfoundation.lams.util.audit.AuditService" >
		<property name="messageService"><ref bean="commonMessageService"/></property>
    </bean>

	<!-- Security service -->
	<bean id="securityServiceTarget" class="org.lamsfoundation.lams.security.SecurityService">
		<property name="securityDAO"><ref bean="securityDAO"/></property>
		<property name="auditService"><ref bean="auditService"/></property>
	</bean>	
	
	<bean id="securityService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property>
		<property name="target"><ref local="securityServiceTarget"/></property>
		<property name="proxyTargetClass"><value>true</value></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="is*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="has*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<!-- Learning Design related beans-->
	<bean id="activityDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.ActivityDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	<bean id="branchActivityEntryDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.BranchActivityEntryDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	<bean id="learningLibraryDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.LearningLibraryDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	<bean id="learningDesignDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.LearningDesignDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	<bean id="transitionDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.TransitionDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	<bean id="groupingDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.GroupingDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	<bean id="groupDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.GroupDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	<bean id="groupUserDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.GroupUserDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	<bean id="licenseDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.LicenseDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	
	<!--User management related beans -->
	
	<bean id="baseDAO" class="org.lamsfoundation.lams.dao.hibernate.BaseDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	<!--  Theme beans -->
	<bean id="themeDAO" class="org.lamsfoundation.lams.themes.dao.hibernate.CSSThemeDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<bean id="roleDAO" class="org.lamsfoundation.lams.usermanagement.dao.hibernate.RoleDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<bean id="organisationDAO" class="org.lamsfoundation.lams.usermanagement.dao.hibernate.OrganisationDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<bean id="userOrganisationDAO" class="org.lamsfoundation.lams.usermanagement.dao.hibernate.UserOrganisationDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<!--  Timezone service related beans -->
	<bean id="timezoneDAO" class="org.lamsfoundation.lams.timezone.dao.hibernate.TimezoneDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	
	<!--  Signup service related beans -->
	<bean id="signupDAO" class="org.lamsfoundation.lams.signup.dao.hibernate.SignupDAO">
		<property name="sessionFactory"><ref bean="coreSessionFactory" /></property>
	</bean>
	
	<!--Event service related beans -->
	<bean id="eventDAO" class="org.lamsfoundation.lams.events.dao.hibernate.EventDAOHibernate">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<!--  LogEvent service related beans -->
	<bean id="logEventDAO" class="org.lamsfoundation.lams.logevent.dao.hibernate.LogEventDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>		
	
	<!-- Core Notebook related beans -->
	<bean id="notebookEntryDAO" class="org.lamsfoundation.lams.notebook.dao.hibernate.NotebookEntryDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	

	<!-- Rating related beans -->
	<bean id="ratingDAO" class="org.lamsfoundation.lams.rating.dao.hibernate.RatingDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	<bean id="ratingCommentDAO" class="org.lamsfoundation.lams.rating.dao.hibernate.RatingCommentDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	<bean id="ratingCriteriaDAO" class="org.lamsfoundation.lams.rating.dao.hibernate.RatingCriteriaDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	
	<!-- Presence Chat related beans -->
	<bean id="presenceChatDAO" class="org.lamsfoundation.lams.presence.dao.hibernate.PresenceChatDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>	
	
	<!--  Configuration related beans -->
	<bean id="configurationDAO" class="org.lamsfoundation.lams.config.dao.hibernate.ConfigurationDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	<bean id="registrationDAO" class="org.lamsfoundation.lams.config.dao.hibernate.RegistrationDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<!--  Competence related beans -->
	<bean id="competenceDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.CompetenceDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	<bean id="competenceMappingDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.CompetenceMappingDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<!--  Pedagogical Planner related beans -->
	<bean id="pedagogicalPlannerDAO" class="org.lamsfoundation.lams.planner.dao.hibernate.PedagogicalPlannerDAOHibernate">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<!--  Gradebook related beans -->
	<bean id="gradebookDAO" class="org.lamsfoundation.lams.gradebook.dao.hibernate.GradebookDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<!--  Data flow related beans -->
	<bean id="dataFlowDAO" class="org.lamsfoundation.lams.learningdesign.dao.hibernate.DataFlowDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<!--  Data flow related beans -->
	<bean id="securityDAO" class="org.lamsfoundation.lams.security.SecurityDAO">
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<!--  System Session bean -->
	<bean id="SystemSession"
	    class="org.lamsfoundation.lams.web.session.SessionManager"
	    init-method="init"
	    destroy-method="destroy"
		singleton="true">
		<property name="monitorPeriod"><value>60</value></property>
	</bean>
	
	<!-- Cache Manager bean. cacheObjectName should be the same value as hibernate.treecache.objectName -->
	<bean id="cacheManager" class="org.lamsfoundation.lams.cache.CacheManager">
		<property name="cacheObjectName"><value>jboss.cache:service=TreeCache</value></property>
		<property name="sessionFactory"><ref local="coreSessionFactory"/></property>
	</bean>
	
	<bean id="statisticsService" class="org.lamsfoundation.lams.statistics.service.StatisticsService">
   		<property name="baseDAO">
   			<ref bean="baseDAO"/>
   		</property>	
   		<property name="userService">
   			<ref local="userManagementService"/>
   		</property>
    </bean>
	
</beans>