<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<!-- This bean is responsible for applying the interceptor to our classes.-->
	<!-- The proxyTargetClass must be set to true to enforce usage of cglib,-->
	<!-- rather than dynamic proxies. Dynamic proxies won't work with the valuestack -->
	<!-- bean id="proxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
	      <property name="proxyTargetClass"><value>true</value></property>     
	</bean-->
		<!-- ========================= GENERAL DEFINITIONS ========================= -->
		<bean id="authoringMessageService" class="org.lamsfoundation.lams.util.MessageService" >
		<property name="messageSource">
			<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
				<property name="basename">
					<value>org.lamsfoundation.lams.central.ApplicationResources</value>
				</property>
			</bean>
		</property>
    	</bean>
    	
	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->
	
	<bean id="ObjectExtractor" class="org.lamsfoundation.lams.authoring.ObjectExtractor" singleton="false">
		<property name="learningDesignDAO"><ref bean="learningDesignDAO"/></property>
		<property name="learningLibraryDAO"><ref bean="learningLibraryDAO"/></property>
		<property name="baseDAO"><ref bean="baseDAO"/></property>
		<property name="activityDAO"><ref bean="activityDAO"/></property>
		<property name="competenceDAO"><ref bean="competenceDAO"/></property>
		<property name="competenceMappingDAO"><ref bean="competenceMappingDAO"/></property>
		<property name="transitionDAO"><ref bean="transitionDAO"/></property>
		<property name="toolDAO"><ref bean="toolDAO"/></property>
		<property name="systemToolDAO"><ref bean="systemToolDAO"/></property>
		<property name="groupingDAO"><ref bean="groupingDAO"/></property>
		<property name="groupDAO"><ref bean="groupDAO"/></property>
		<property name="licenseDAO"><ref bean="licenseDAO"/></property>
		<property name="toolSessionDAO"><ref bean="toolSessionDAO"/></property>
		<property name="branchActivityEntryDAO"><ref bean="branchActivityEntryDAO"/></property>
		<property name="lamsCoreToolService"><ref bean="lamsCoreToolService"/></property>
   	</bean>

	<bean id="authoringServiceTarget" class="org.lamsfoundation.lams.authoring.service.AuthoringService">
		<property name="learningDesignDAO"><ref bean="learningDesignDAO"/></property>
		<property name="learningLibraryDAO"><ref bean="learningLibraryDAO"/></property>
		<property name="baseDAO"><ref bean="baseDAO"/></property>
		<property name="activityDAO"><ref bean="activityDAO"/></property>
		<property name="transitionDAO"><ref bean="transitionDAO"/></property>
		<property name="toolDAO"><ref bean="toolDAO"/></property>
		<property name="systemToolDAO"><ref bean="systemToolDAO"/></property>
		<property name="groupingDAO"><ref bean="groupingDAO"/></property>
		<property name="groupDAO"><ref bean="groupDAO"/></property>
		<property name="competenceDAO"><ref bean="competenceDAO"/></property>
		<property name="competenceMappingDAO"><ref bean="competenceMappingDAO"/></property>
		<property name="licenseDAO"><ref bean="licenseDAO"/></property>
		<property name="lamsCoreToolService"><ref bean="lamsCoreToolService"/></property>			
		<property name="contentIDGenerator"><ref bean="toolContentIDGenerator"/></property>
		<property name="messageService"><ref bean="authoringMessageService"/></property>
		<property name="learningDesignService"><ref bean="learningDesignService"/></property>
		<property name="lessonService"><ref bean="lessonService"/></property>
		<property name="monitoringService"><ref bean="monitoringService"/></property>
		<property name="workspaceManagementService"><ref bean="workspaceManagementService"/></property>
		<property name="logEventService"><ref bean="logEventService"/></property>		
	</bean>
	
	<bean id="authoringService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name ="transactionManager"><ref bean ="transactionManager"/></property>
		<property name ="target"><ref bean="authoringServiceTarget"/></property>
		<property name="postInterceptors">
			<list>
				<ref bean="transactionRetryInterceptor" />			
			</list>
		</property>
		<!-- TransactionProxyFactoryBean by default just proxies all interfaces implemented by the target object -->
		<!-- AuthoringService is class so needs to be proxied via CGLIB -->
		<!-- Specify "proxyTargetClass" = "true" to generate a CGLIB proxy-->
		<!-- property name="proxyTargetClass"><value>true</value></property-->     
		
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
				<prop key="copy*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="validate*">PROPAGATION_REQUIRED</prop>
				<prop key="setup*">PROPAGATION_REQUIRED</prop>
				<prop key="finish*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="rename*">PROPAGATION_REQUIRED</prop>
				<prop key="getToolOutputDefinitions">PROPAGATION_REQUIRED</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
</beans>
